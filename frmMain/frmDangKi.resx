<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>